type User {
  id: ID! @id
  userName: String! @unique
  email : String! @unique
  firstName: String @default(value: "")
  lastname: String
  bio: String
  followers: [User!]! @relation(name: "FollowRelation")
  following: [User!]! @relation(name: "FollowRelation")
  post: [Post!]! @relation(name:"PostOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name:"LikeOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name:"CommentOfUser", onDelete: CASCADE)
  rooms: [Room!]! 
  loginSecret: String
}

type Post {  
  id: ID! @id
  location: String!
  caption: String!
  user: User @relation(name:"PostOfUser")
  files: [File!]! @relation(name:"FilesOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name:"LikeOfPost", onDelete: CASCADE)
  comments: [Comment!]!@relation(name:"CommentOfPost", onDelete: CASCADE)
}

type Like {
  id: ID! @id 
  user: User @relation(name:"LikeOfUser")
  post: Post @relation(name:"LikeOfPost")
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name:"CommentOfUser")
  post: Post !@relation(name:"CommentOfPost")
}

type File {
  id: ID! @id 
  url: String!
  post: Post @relation(name: "FilesOfPost")
}

type Room {
  id: ID! @id
  participants: [User!]!
  message: [Message!]!
}

type Message {
  id: ID! @id
  text:String!
  from : User @relation(name:"From")
  to: User @relation(name:"To")
  room: Room!
}